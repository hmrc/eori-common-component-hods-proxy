# Copyright 2023 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName=eori-common-component-hods-proxy

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900


# ~~~~
# Additional play modules can be added here
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"
play.modules.enabled += "uk.gov.hmrc.play.audit.AuditModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"
play.modules.enabled += "uk.gov.hmrc.internalauth.client.modules.InternalAuthModule"


play.filters.enabled=[]


# Session configuration
# ~~~~~
application.session.httpOnly = false
application.session.secure = false

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {

  com.kenshoo.play.metrics.MetricsController = {
    needsLogging = false
    needsAuditing = false
  }

  default.config = {
    needsLogging = true
    needsAuditing = false
  }

  uk.gov.hmrc.customs.hodsproxy.controllers.SubscriptionController = ${controllers.default.config}
  uk.gov.hmrc.customs.hodsproxy.controllers.RegisterWithIdController = ${controllers.default.config}
  uk.gov.hmrc.customs.hodsproxy.controllers.RegisterWithoutIdController = ${controllers.default.config}
  uk.gov.hmrc.customs.hodsproxy.controllers.SubscriptionStatusController = ${controllers.default.config}
  uk.gov.hmrc.customs.hodsproxy.controllers.SubscriptionDisplayController = ${controllers.default.config}
  uk.gov.hmrc.customs.hodsproxy.controllers.RegisterWithEoriAndIdController = ${controllers.default.config}
  uk.gov.hmrc.customs.hodsproxy.controllers.VatKnownFactsControlListController = ${controllers.default.config}
}


# CdsMetrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    enabled = true
}

tokens {
  bearer-token = "bearer_token_must_be_set_in_app-config-xxx"
}


microservice {

  services {
    service-locator {
      enabled = false
    }
    auth {
      host = localhost
      port = 8500
    }

    internal-auth {
      protocol = http
      host = localhost
      port = 8470
    }

    datastream {
      host = localhost
      port = 8100
    }

    subscription-service {
      host = localhost
      port = 6754
      context = "/subscriptions/subscriptioncreate/v1"
      bearer-token = ${tokens.bearer-token}
    }

    register-with-id {
      host = localhost
      port = 6754
      bearer-token = ${tokens.bearer-token}
      context = "/registrations/registerwithid/1.0.0"
    }

    register-without-id {
      host = localhost
      port = 6754
      bearer-token = ${tokens.bearer-token}
      context = "/registrations/registerwithoutid/v1"
    }

    register-with-eori-and-id {
      host = localhost
      port = 6754
      bearer-token = ${tokens.bearer-token}
      context = "/registrations/registerwitheoriandid/v1"
    }

    subscription-status {
      host = localhost
      port = 6754
      bearer-token = ${tokens.bearer-token}
      context = "/subscriptions/subscriptionstatus/v1"
    }

    subscription-display {
      host = localhost
      port = 6754
      bearer-token = ${tokens.bearer-token}
      context = "/subscriptions/subscriptiondisplay/v1"
    }

    registration-display {
      host = localhost
      port = 6754
      bearer-token = ${tokens.bearer-token}
      context = "/registrations/cdsregistrationdisplay/v1"
    }

    update-verified-email {
      host = localhost
      port = 6754
      bearer-token = ${tokens.bearer-token}
      context = "/subscriptions/updateverifiedemail/v1"
    }

    vat-known-facts-control-list {
      host = localhost
      port = 6754
      bearer-token = ${tokens.bearer-token}
      context = "/vat/known-facts/control-list"
      des-environment  = "ist0"
    }
  }
}
